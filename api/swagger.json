{
  "swagger": "2.0",
  "info": {
    "title": "Safe Place API",
    "version": "1.0.0"
  },
  "schemes": [
    "http"
  ],
  "host": "localhost:3000",
  "basePath": "/api",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "operationId": "getAllUsers",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "A list of users",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "operationId": "createUser",
        "tags": ["Users"],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "User object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "operationId": "getUserById",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update user by ID",
        "operationId": "updateUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "user",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete user by ID",
        "operationId": "deleteUser",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "Get all posts",
        "operationId": "getAllPosts",
        "tags": ["Posts"],
        "responses": {
          "200": {
            "description": "A list of posts",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new post",
        "operationId": "createPost",
        "tags": ["Posts"],
        "parameters": [
          {
            "in": "body",
            "name": "post",
            "description": "Post object to create",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        }
      }
    },
    "/posts/{id}": {
      "get": {
        "summary": "Get post by ID",
        "operationId": "getPostById",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Post details",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "put": {
        "summary": "Update post by ID",
        "operationId": "updatePost",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "post",
            "description": "Updated post object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "404": {
            "description": "Post not found"
          }
        }
      },
      "delete": {
        "summary": "Delete post by ID",
        "operationId": "deletePost",
        "tags": ["Posts"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Post deleted successfully"
          },
          "404": {
            "description": "Post not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "Id_User": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "birth_date": {
          "type": "string",
          "format": "date-time"
        },
        "mail": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "seed_totp": {
          "type": "string"
        }
      },
      "required": ["last_name", "first_name", "birth_date", "mail", "password"]
    },
    "NewUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "birth_date": {
          "type": "string",
          "format": "date-time"
        },
        "mail": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "seed_totp": {
          "type": "string"
        }
      },
      "required": ["last_name", "first_name", "birth_date", "mail", "password"]
    },
    "Post": {
      "type": "object",
      "properties": {
        "Id_Post": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        },
        "toxic_score": {
          "type": "number",
          "format": "decimal"
        },
        "image_exists": {
          "type": "boolean"
        },
        "date_creation": {
          "type": "string",
          "format": "date-time"
        },
        "verified": {
          "type": "boolean"
        },
        "Id_User": {
          "type": "string"
        }
      },
      "required": ["content", "visibility", "toxic_score", "date_creation", "Id_User"]
    },
    "NewPost": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "visibility": {
          "type": "string"
        },
        "toxic_score": {
          "type": "number",
          "format": "decimal"
        },
        "image_exists": {
          "type": "boolean"
        },
        "date_creation": {
          "type": "string",
          "format": "date-time"
        },
        "verified": {
          "type": "boolean"
        },
        "Id_User": {
          "type": "string"
        }
      },
      "required": ["content", "visibility", "toxic_score", "date_creation", "Id_User"]
    }
  }
}
